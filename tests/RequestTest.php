<?php
namespace HummingJay;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-06-19 at 22:02:00.
 */
class RequestTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Request
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Request();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers HummingJay\Request::callMethod
     * @todo   Implement testCallMethod().
     */
    public function testGetServerData()
    {
        $this->object->getServerData('');
		$this->assertEquals (
        	true,
        	$this->object->dataWasEmpty,
        	"dataWasEmpty is true if given a blank string."
    	); 



	    $this->object->getServerData('I will break you.');
	    
	    $this->assertEquals (
	    	false,
	    	$this->object->dataWasEmpty,
	    	"dataWasEmpty is false if given a string."
		);
       
        $this->assertEquals (
        	'Syntax error, malformed JSON',
        	$this->object->jsonMessage,
        	"Verify jsonMessage is set when given invalid JSON"
    	); 
       
        $this->assertEquals (
        	JSON_ERROR_SYNTAX,
        	$this->object->jsonError,
        	"Verify jsonError is set when given invalid JSON"
    	); 
    	
    	$this->assertEquals (
        	null,
        	$this->object->data,
        	"Data should be null if no JSON data is given"
    	); 
       


        $this->object->getServerData('{"animal":"cat"}');
        $this->assertEquals (
            'cat',
            $this->object->data->animal,
            "Requsted JSON Data was good."
        ); 


    }
}